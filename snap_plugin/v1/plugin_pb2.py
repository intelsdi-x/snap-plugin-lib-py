# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: plugin.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='plugin.proto',
  package='rpc',
  syntax='proto3',
  serialized_pb=_b('\n\x0cplugin.proto\x12\x03rpc\"\x07\n\x05\x45mpty\"\x19\n\x08\x45rrReply\x12\r\n\x05\x65rror\x18\x01 \x01(\t\"!\n\x04Time\x12\x0b\n\x03sec\x18\x01 \x01(\x03\x12\x0c\n\x04nsec\x18\x02 \x01(\x03\"D\n\x10NamespaceElement\x12\r\n\x05Value\x18\x01 \x01(\t\x12\x13\n\x0b\x44\x65scription\x18\x02 \x01(\t\x12\x0c\n\x04Name\x18\x03 \x01(\t\"J\n\nPubProcArg\x12\x1c\n\x07Metrics\x18\x01 \x03(\x0b\x32\x0b.rpc.Metric\x12\x1e\n\x06\x43onfig\x18\x02 \x01(\x0b\x32\x0e.rpc.ConfigMap\"\xc3\x03\n\x06Metric\x12(\n\tNamespace\x18\x01 \x03(\x0b\x32\x15.rpc.NamespaceElement\x12\x0f\n\x07Version\x18\x02 \x01(\x03\x12\x1e\n\x06\x43onfig\x18\x03 \x01(\x0b\x32\x0e.rpc.ConfigMap\x12%\n\x12LastAdvertisedTime\x18\x04 \x01(\x0b\x32\t.rpc.Time\x12#\n\x04Tags\x18\x05 \x03(\x0b\x32\x15.rpc.Metric.TagsEntry\x12\x1c\n\tTimestamp\x18\x06 \x01(\x0b\x32\t.rpc.Time\x12\x0c\n\x04Unit\x18\x07 \x01(\t\x12\x13\n\x0b\x44\x65scription\x18\x08 \x01(\t\x12\x15\n\x0bstring_data\x18\t \x01(\tH\x00\x12\x16\n\x0c\x66loat32_data\x18\n \x01(\x02H\x00\x12\x16\n\x0c\x66loat64_data\x18\x0b \x01(\x01H\x00\x12\x14\n\nint32_data\x18\x0c \x01(\x05H\x00\x12\x14\n\nint64_data\x18\r \x01(\x03H\x00\x12\x14\n\nbytes_data\x18\x0e \x01(\x0cH\x00\x12\x13\n\tbool_data\x18\x0f \x01(\x08H\x00\x1a+\n\tTagsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\x06\n\x04\x64\x61ta\"\x89\x03\n\tConfigMap\x12*\n\x06IntMap\x18\x01 \x03(\x0b\x32\x1a.rpc.ConfigMap.IntMapEntry\x12\x30\n\tStringMap\x18\x02 \x03(\x0b\x32\x1d.rpc.ConfigMap.StringMapEntry\x12.\n\x08\x46loatMap\x18\x03 \x03(\x0b\x32\x1c.rpc.ConfigMap.FloatMapEntry\x12,\n\x07\x42oolMap\x18\x04 \x03(\x0b\x32\x1b.rpc.ConfigMap.BoolMapEntry\x1a-\n\x0bIntMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x30\n\x0eStringMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a/\n\rFloatMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\x1a.\n\x0c\x42oolMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\"\x19\n\x07KillArg\x12\x0e\n\x06Reason\x18\x01 \x01(\t\"\xcd\x04\n\x14GetConfigPolicyReply\x12\r\n\x05\x65rror\x18\x01 \x01(\t\x12>\n\x0b\x62ool_policy\x18\x02 \x03(\x0b\x32).rpc.GetConfigPolicyReply.BoolPolicyEntry\x12@\n\x0c\x66loat_policy\x18\x03 \x03(\x0b\x32*.rpc.GetConfigPolicyReply.FloatPolicyEntry\x12\x44\n\x0einteger_policy\x18\x04 \x03(\x0b\x32,.rpc.GetConfigPolicyReply.IntegerPolicyEntry\x12\x42\n\rstring_policy\x18\x05 \x03(\x0b\x32+.rpc.GetConfigPolicyReply.StringPolicyEntry\x1a\x42\n\x0f\x42oolPolicyEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1e\n\x05value\x18\x02 \x01(\x0b\x32\x0f.rpc.BoolPolicy:\x02\x38\x01\x1a\x44\n\x10\x46loatPolicyEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1f\n\x05value\x18\x02 \x01(\x0b\x32\x10.rpc.FloatPolicy:\x02\x38\x01\x1aH\n\x12IntegerPolicyEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12!\n\x05value\x18\x02 \x01(\x0b\x32\x12.rpc.IntegerPolicy:\x02\x38\x01\x1a\x46\n\x11StringPolicyEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12 \n\x05value\x18\x02 \x01(\x0b\x32\x11.rpc.StringPolicy:\x02\x38\x01\"B\n\x08\x42oolRule\x12\x10\n\x08required\x18\x01 \x01(\x08\x12\x0f\n\x07\x64\x65\x66\x61ult\x18\x02 \x01(\x08\x12\x13\n\x0bhas_default\x18\x03 \x01(\x08\"\x81\x01\n\nBoolPolicy\x12)\n\x05rules\x18\x01 \x03(\x0b\x32\x1a.rpc.BoolPolicy.RulesEntry\x12\x0b\n\x03key\x18\x02 \x03(\t\x1a;\n\nRulesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1c\n\x05value\x18\x02 \x01(\x0b\x32\r.rpc.BoolRule:\x02\x38\x01\"\x87\x01\n\tFloatRule\x12\x10\n\x08required\x18\x01 \x01(\x08\x12\x0f\n\x07minimum\x18\x02 \x01(\x01\x12\x0f\n\x07maximum\x18\x03 \x01(\x01\x12\x0f\n\x07\x64\x65\x66\x61ult\x18\x04 \x01(\x01\x12\x13\n\x0bhas_default\x18\x05 \x01(\x08\x12\x0f\n\x07has_min\x18\x06 \x01(\x08\x12\x0f\n\x07has_max\x18\x07 \x01(\x08\"\x84\x01\n\x0b\x46loatPolicy\x12*\n\x05rules\x18\x01 \x03(\x0b\x32\x1b.rpc.FloatPolicy.RulesEntry\x12\x0b\n\x03key\x18\x02 \x03(\t\x1a<\n\nRulesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1d\n\x05value\x18\x02 \x01(\x0b\x32\x0e.rpc.FloatRule:\x02\x38\x01\"\x89\x01\n\x0bIntegerRule\x12\x10\n\x08required\x18\x01 \x01(\x08\x12\x0f\n\x07minimum\x18\x02 \x01(\x03\x12\x0f\n\x07maximum\x18\x03 \x01(\x03\x12\x0f\n\x07\x64\x65\x66\x61ult\x18\x04 \x01(\x03\x12\x13\n\x0bhas_default\x18\x05 \x01(\x08\x12\x0f\n\x07has_min\x18\x06 \x01(\x08\x12\x0f\n\x07has_max\x18\x07 \x01(\x08\"\x8a\x01\n\rIntegerPolicy\x12,\n\x05rules\x18\x01 \x03(\x0b\x32\x1d.rpc.IntegerPolicy.RulesEntry\x12\x0b\n\x03key\x18\x02 \x03(\t\x1a>\n\nRulesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1f\n\x05value\x18\x02 \x01(\x0b\x32\x10.rpc.IntegerRule:\x02\x38\x01\"D\n\nStringRule\x12\x10\n\x08required\x18\x01 \x01(\x08\x12\x0f\n\x07\x64\x65\x66\x61ult\x18\x02 \x01(\t\x12\x13\n\x0bhas_default\x18\x03 \x01(\x08\"\x87\x01\n\x0cStringPolicy\x12+\n\x05rules\x18\x01 \x03(\x0b\x32\x1c.rpc.StringPolicy.RulesEntry\x12\x0b\n\x03key\x18\x02 \x03(\t\x1a=\n\nRulesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1e\n\x05value\x18\x02 \x01(\x0b\x32\x0f.rpc.StringRule:\x02\x38\x01\"*\n\nMetricsArg\x12\x1c\n\x07metrics\x18\x01 \x03(\x0b\x32\x0b.rpc.Metric\";\n\x0cMetricsReply\x12\x1c\n\x07metrics\x18\x01 \x03(\x0b\x32\x0b.rpc.Metric\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"3\n\x11GetMetricTypesArg\x12\x1e\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x0e.rpc.ConfigMap2\x8a\x02\n\tCollector\x12\x36\n\x0e\x43ollectMetrics\x12\x0f.rpc.MetricsArg\x1a\x11.rpc.MetricsReply\"\x00\x12=\n\x0eGetMetricTypes\x12\x16.rpc.GetMetricTypesArg\x1a\x11.rpc.MetricsReply\"\x00\x12#\n\x04Ping\x12\n.rpc.Empty\x1a\r.rpc.ErrReply\"\x00\x12%\n\x04Kill\x12\x0c.rpc.KillArg\x1a\r.rpc.ErrReply\"\x00\x12:\n\x0fGetConfigPolicy\x12\n.rpc.Empty\x1a\x19.rpc.GetConfigPolicyReply\"\x00\x32\xc4\x01\n\tProcessor\x12/\n\x07Process\x12\x0f.rpc.PubProcArg\x1a\x11.rpc.MetricsReply\"\x00\x12#\n\x04Ping\x12\n.rpc.Empty\x1a\r.rpc.ErrReply\"\x00\x12%\n\x04Kill\x12\x0c.rpc.KillArg\x1a\r.rpc.ErrReply\"\x00\x12:\n\x0fGetConfigPolicy\x12\n.rpc.Empty\x1a\x19.rpc.GetConfigPolicyReply\"\x00\x32\xc0\x01\n\tPublisher\x12+\n\x07Publish\x12\x0f.rpc.PubProcArg\x1a\r.rpc.ErrReply\"\x00\x12#\n\x04Ping\x12\n.rpc.Empty\x1a\r.rpc.ErrReply\"\x00\x12%\n\x04Kill\x12\x0c.rpc.KillArg\x1a\r.rpc.ErrReply\"\x00\x12:\n\x0fGetConfigPolicy\x12\n.rpc.Empty\x1a\x19.rpc.GetConfigPolicyReply\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='rpc.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=28,
)


_ERRREPLY = _descriptor.Descriptor(
  name='ErrReply',
  full_name='rpc.ErrReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error', full_name='rpc.ErrReply.error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=55,
)


_TIME = _descriptor.Descriptor(
  name='Time',
  full_name='rpc.Time',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sec', full_name='rpc.Time.sec', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nsec', full_name='rpc.Time.nsec', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=57,
  serialized_end=90,
)


_NAMESPACEELEMENT = _descriptor.Descriptor(
  name='NamespaceElement',
  full_name='rpc.NamespaceElement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Value', full_name='rpc.NamespaceElement.Value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Description', full_name='rpc.NamespaceElement.Description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Name', full_name='rpc.NamespaceElement.Name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=160,
)


_PUBPROCARG = _descriptor.Descriptor(
  name='PubProcArg',
  full_name='rpc.PubProcArg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Metrics', full_name='rpc.PubProcArg.Metrics', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Config', full_name='rpc.PubProcArg.Config', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=162,
  serialized_end=236,
)


_METRIC_TAGSENTRY = _descriptor.Descriptor(
  name='TagsEntry',
  full_name='rpc.Metric.TagsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.Metric.TagsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.Metric.TagsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=639,
  serialized_end=682,
)

_METRIC = _descriptor.Descriptor(
  name='Metric',
  full_name='rpc.Metric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Namespace', full_name='rpc.Metric.Namespace', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Version', full_name='rpc.Metric.Version', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Config', full_name='rpc.Metric.Config', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='LastAdvertisedTime', full_name='rpc.Metric.LastAdvertisedTime', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Tags', full_name='rpc.Metric.Tags', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Timestamp', full_name='rpc.Metric.Timestamp', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Unit', full_name='rpc.Metric.Unit', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Description', full_name='rpc.Metric.Description', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='string_data', full_name='rpc.Metric.string_data', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='float32_data', full_name='rpc.Metric.float32_data', index=9,
      number=10, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='float64_data', full_name='rpc.Metric.float64_data', index=10,
      number=11, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='int32_data', full_name='rpc.Metric.int32_data', index=11,
      number=12, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='int64_data', full_name='rpc.Metric.int64_data', index=12,
      number=13, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bytes_data', full_name='rpc.Metric.bytes_data', index=13,
      number=14, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bool_data', full_name='rpc.Metric.bool_data', index=14,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_METRIC_TAGSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='data', full_name='rpc.Metric.data',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=239,
  serialized_end=690,
)


_CONFIGMAP_INTMAPENTRY = _descriptor.Descriptor(
  name='IntMapEntry',
  full_name='rpc.ConfigMap.IntMapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.ConfigMap.IntMapEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.ConfigMap.IntMapEntry.value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=894,
  serialized_end=939,
)

_CONFIGMAP_STRINGMAPENTRY = _descriptor.Descriptor(
  name='StringMapEntry',
  full_name='rpc.ConfigMap.StringMapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.ConfigMap.StringMapEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.ConfigMap.StringMapEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=941,
  serialized_end=989,
)

_CONFIGMAP_FLOATMAPENTRY = _descriptor.Descriptor(
  name='FloatMapEntry',
  full_name='rpc.ConfigMap.FloatMapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.ConfigMap.FloatMapEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.ConfigMap.FloatMapEntry.value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=991,
  serialized_end=1038,
)

_CONFIGMAP_BOOLMAPENTRY = _descriptor.Descriptor(
  name='BoolMapEntry',
  full_name='rpc.ConfigMap.BoolMapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.ConfigMap.BoolMapEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.ConfigMap.BoolMapEntry.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1040,
  serialized_end=1086,
)

_CONFIGMAP = _descriptor.Descriptor(
  name='ConfigMap',
  full_name='rpc.ConfigMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='IntMap', full_name='rpc.ConfigMap.IntMap', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='StringMap', full_name='rpc.ConfigMap.StringMap', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='FloatMap', full_name='rpc.ConfigMap.FloatMap', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='BoolMap', full_name='rpc.ConfigMap.BoolMap', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CONFIGMAP_INTMAPENTRY, _CONFIGMAP_STRINGMAPENTRY, _CONFIGMAP_FLOATMAPENTRY, _CONFIGMAP_BOOLMAPENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=693,
  serialized_end=1086,
)


_KILLARG = _descriptor.Descriptor(
  name='KillArg',
  full_name='rpc.KillArg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Reason', full_name='rpc.KillArg.Reason', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1088,
  serialized_end=1113,
)


_GETCONFIGPOLICYREPLY_BOOLPOLICYENTRY = _descriptor.Descriptor(
  name='BoolPolicyEntry',
  full_name='rpc.GetConfigPolicyReply.BoolPolicyEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.GetConfigPolicyReply.BoolPolicyEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.GetConfigPolicyReply.BoolPolicyEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1423,
  serialized_end=1489,
)

_GETCONFIGPOLICYREPLY_FLOATPOLICYENTRY = _descriptor.Descriptor(
  name='FloatPolicyEntry',
  full_name='rpc.GetConfigPolicyReply.FloatPolicyEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.GetConfigPolicyReply.FloatPolicyEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.GetConfigPolicyReply.FloatPolicyEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1491,
  serialized_end=1559,
)

_GETCONFIGPOLICYREPLY_INTEGERPOLICYENTRY = _descriptor.Descriptor(
  name='IntegerPolicyEntry',
  full_name='rpc.GetConfigPolicyReply.IntegerPolicyEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.GetConfigPolicyReply.IntegerPolicyEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.GetConfigPolicyReply.IntegerPolicyEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1561,
  serialized_end=1633,
)

_GETCONFIGPOLICYREPLY_STRINGPOLICYENTRY = _descriptor.Descriptor(
  name='StringPolicyEntry',
  full_name='rpc.GetConfigPolicyReply.StringPolicyEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.GetConfigPolicyReply.StringPolicyEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.GetConfigPolicyReply.StringPolicyEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1635,
  serialized_end=1705,
)

_GETCONFIGPOLICYREPLY = _descriptor.Descriptor(
  name='GetConfigPolicyReply',
  full_name='rpc.GetConfigPolicyReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error', full_name='rpc.GetConfigPolicyReply.error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bool_policy', full_name='rpc.GetConfigPolicyReply.bool_policy', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='float_policy', full_name='rpc.GetConfigPolicyReply.float_policy', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='integer_policy', full_name='rpc.GetConfigPolicyReply.integer_policy', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='string_policy', full_name='rpc.GetConfigPolicyReply.string_policy', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GETCONFIGPOLICYREPLY_BOOLPOLICYENTRY, _GETCONFIGPOLICYREPLY_FLOATPOLICYENTRY, _GETCONFIGPOLICYREPLY_INTEGERPOLICYENTRY, _GETCONFIGPOLICYREPLY_STRINGPOLICYENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1116,
  serialized_end=1705,
)


_BOOLRULE = _descriptor.Descriptor(
  name='BoolRule',
  full_name='rpc.BoolRule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='required', full_name='rpc.BoolRule.required', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='default', full_name='rpc.BoolRule.default', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_default', full_name='rpc.BoolRule.has_default', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1707,
  serialized_end=1773,
)


_BOOLPOLICY_RULESENTRY = _descriptor.Descriptor(
  name='RulesEntry',
  full_name='rpc.BoolPolicy.RulesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.BoolPolicy.RulesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.BoolPolicy.RulesEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1846,
  serialized_end=1905,
)

_BOOLPOLICY = _descriptor.Descriptor(
  name='BoolPolicy',
  full_name='rpc.BoolPolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rules', full_name='rpc.BoolPolicy.rules', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.BoolPolicy.key', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_BOOLPOLICY_RULESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1776,
  serialized_end=1905,
)


_FLOATRULE = _descriptor.Descriptor(
  name='FloatRule',
  full_name='rpc.FloatRule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='required', full_name='rpc.FloatRule.required', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minimum', full_name='rpc.FloatRule.minimum', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='rpc.FloatRule.maximum', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='default', full_name='rpc.FloatRule.default', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_default', full_name='rpc.FloatRule.has_default', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_min', full_name='rpc.FloatRule.has_min', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_max', full_name='rpc.FloatRule.has_max', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1908,
  serialized_end=2043,
)


_FLOATPOLICY_RULESENTRY = _descriptor.Descriptor(
  name='RulesEntry',
  full_name='rpc.FloatPolicy.RulesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.FloatPolicy.RulesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.FloatPolicy.RulesEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2118,
  serialized_end=2178,
)

_FLOATPOLICY = _descriptor.Descriptor(
  name='FloatPolicy',
  full_name='rpc.FloatPolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rules', full_name='rpc.FloatPolicy.rules', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.FloatPolicy.key', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_FLOATPOLICY_RULESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2046,
  serialized_end=2178,
)


_INTEGERRULE = _descriptor.Descriptor(
  name='IntegerRule',
  full_name='rpc.IntegerRule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='required', full_name='rpc.IntegerRule.required', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minimum', full_name='rpc.IntegerRule.minimum', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='rpc.IntegerRule.maximum', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='default', full_name='rpc.IntegerRule.default', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_default', full_name='rpc.IntegerRule.has_default', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_min', full_name='rpc.IntegerRule.has_min', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_max', full_name='rpc.IntegerRule.has_max', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2181,
  serialized_end=2318,
)


_INTEGERPOLICY_RULESENTRY = _descriptor.Descriptor(
  name='RulesEntry',
  full_name='rpc.IntegerPolicy.RulesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.IntegerPolicy.RulesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.IntegerPolicy.RulesEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2397,
  serialized_end=2459,
)

_INTEGERPOLICY = _descriptor.Descriptor(
  name='IntegerPolicy',
  full_name='rpc.IntegerPolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rules', full_name='rpc.IntegerPolicy.rules', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.IntegerPolicy.key', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_INTEGERPOLICY_RULESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2321,
  serialized_end=2459,
)


_STRINGRULE = _descriptor.Descriptor(
  name='StringRule',
  full_name='rpc.StringRule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='required', full_name='rpc.StringRule.required', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='default', full_name='rpc.StringRule.default', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_default', full_name='rpc.StringRule.has_default', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2461,
  serialized_end=2529,
)


_STRINGPOLICY_RULESENTRY = _descriptor.Descriptor(
  name='RulesEntry',
  full_name='rpc.StringPolicy.RulesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.StringPolicy.RulesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='rpc.StringPolicy.RulesEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2606,
  serialized_end=2667,
)

_STRINGPOLICY = _descriptor.Descriptor(
  name='StringPolicy',
  full_name='rpc.StringPolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rules', full_name='rpc.StringPolicy.rules', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key', full_name='rpc.StringPolicy.key', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_STRINGPOLICY_RULESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2532,
  serialized_end=2667,
)


_METRICSARG = _descriptor.Descriptor(
  name='MetricsArg',
  full_name='rpc.MetricsArg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metrics', full_name='rpc.MetricsArg.metrics', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2669,
  serialized_end=2711,
)


_METRICSREPLY = _descriptor.Descriptor(
  name='MetricsReply',
  full_name='rpc.MetricsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metrics', full_name='rpc.MetricsReply.metrics', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='rpc.MetricsReply.error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2713,
  serialized_end=2772,
)


_GETMETRICTYPESARG = _descriptor.Descriptor(
  name='GetMetricTypesArg',
  full_name='rpc.GetMetricTypesArg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='config', full_name='rpc.GetMetricTypesArg.config', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2774,
  serialized_end=2825,
)

_PUBPROCARG.fields_by_name['Metrics'].message_type = _METRIC
_PUBPROCARG.fields_by_name['Config'].message_type = _CONFIGMAP
_METRIC_TAGSENTRY.containing_type = _METRIC
_METRIC.fields_by_name['Namespace'].message_type = _NAMESPACEELEMENT
_METRIC.fields_by_name['Config'].message_type = _CONFIGMAP
_METRIC.fields_by_name['LastAdvertisedTime'].message_type = _TIME
_METRIC.fields_by_name['Tags'].message_type = _METRIC_TAGSENTRY
_METRIC.fields_by_name['Timestamp'].message_type = _TIME
_METRIC.oneofs_by_name['data'].fields.append(
  _METRIC.fields_by_name['string_data'])
_METRIC.fields_by_name['string_data'].containing_oneof = _METRIC.oneofs_by_name['data']
_METRIC.oneofs_by_name['data'].fields.append(
  _METRIC.fields_by_name['float32_data'])
_METRIC.fields_by_name['float32_data'].containing_oneof = _METRIC.oneofs_by_name['data']
_METRIC.oneofs_by_name['data'].fields.append(
  _METRIC.fields_by_name['float64_data'])
_METRIC.fields_by_name['float64_data'].containing_oneof = _METRIC.oneofs_by_name['data']
_METRIC.oneofs_by_name['data'].fields.append(
  _METRIC.fields_by_name['int32_data'])
_METRIC.fields_by_name['int32_data'].containing_oneof = _METRIC.oneofs_by_name['data']
_METRIC.oneofs_by_name['data'].fields.append(
  _METRIC.fields_by_name['int64_data'])
_METRIC.fields_by_name['int64_data'].containing_oneof = _METRIC.oneofs_by_name['data']
_METRIC.oneofs_by_name['data'].fields.append(
  _METRIC.fields_by_name['bytes_data'])
_METRIC.fields_by_name['bytes_data'].containing_oneof = _METRIC.oneofs_by_name['data']
_METRIC.oneofs_by_name['data'].fields.append(
  _METRIC.fields_by_name['bool_data'])
_METRIC.fields_by_name['bool_data'].containing_oneof = _METRIC.oneofs_by_name['data']
_CONFIGMAP_INTMAPENTRY.containing_type = _CONFIGMAP
_CONFIGMAP_STRINGMAPENTRY.containing_type = _CONFIGMAP
_CONFIGMAP_FLOATMAPENTRY.containing_type = _CONFIGMAP
_CONFIGMAP_BOOLMAPENTRY.containing_type = _CONFIGMAP
_CONFIGMAP.fields_by_name['IntMap'].message_type = _CONFIGMAP_INTMAPENTRY
_CONFIGMAP.fields_by_name['StringMap'].message_type = _CONFIGMAP_STRINGMAPENTRY
_CONFIGMAP.fields_by_name['FloatMap'].message_type = _CONFIGMAP_FLOATMAPENTRY
_CONFIGMAP.fields_by_name['BoolMap'].message_type = _CONFIGMAP_BOOLMAPENTRY
_GETCONFIGPOLICYREPLY_BOOLPOLICYENTRY.fields_by_name['value'].message_type = _BOOLPOLICY
_GETCONFIGPOLICYREPLY_BOOLPOLICYENTRY.containing_type = _GETCONFIGPOLICYREPLY
_GETCONFIGPOLICYREPLY_FLOATPOLICYENTRY.fields_by_name['value'].message_type = _FLOATPOLICY
_GETCONFIGPOLICYREPLY_FLOATPOLICYENTRY.containing_type = _GETCONFIGPOLICYREPLY
_GETCONFIGPOLICYREPLY_INTEGERPOLICYENTRY.fields_by_name['value'].message_type = _INTEGERPOLICY
_GETCONFIGPOLICYREPLY_INTEGERPOLICYENTRY.containing_type = _GETCONFIGPOLICYREPLY
_GETCONFIGPOLICYREPLY_STRINGPOLICYENTRY.fields_by_name['value'].message_type = _STRINGPOLICY
_GETCONFIGPOLICYREPLY_STRINGPOLICYENTRY.containing_type = _GETCONFIGPOLICYREPLY
_GETCONFIGPOLICYREPLY.fields_by_name['bool_policy'].message_type = _GETCONFIGPOLICYREPLY_BOOLPOLICYENTRY
_GETCONFIGPOLICYREPLY.fields_by_name['float_policy'].message_type = _GETCONFIGPOLICYREPLY_FLOATPOLICYENTRY
_GETCONFIGPOLICYREPLY.fields_by_name['integer_policy'].message_type = _GETCONFIGPOLICYREPLY_INTEGERPOLICYENTRY
_GETCONFIGPOLICYREPLY.fields_by_name['string_policy'].message_type = _GETCONFIGPOLICYREPLY_STRINGPOLICYENTRY
_BOOLPOLICY_RULESENTRY.fields_by_name['value'].message_type = _BOOLRULE
_BOOLPOLICY_RULESENTRY.containing_type = _BOOLPOLICY
_BOOLPOLICY.fields_by_name['rules'].message_type = _BOOLPOLICY_RULESENTRY
_FLOATPOLICY_RULESENTRY.fields_by_name['value'].message_type = _FLOATRULE
_FLOATPOLICY_RULESENTRY.containing_type = _FLOATPOLICY
_FLOATPOLICY.fields_by_name['rules'].message_type = _FLOATPOLICY_RULESENTRY
_INTEGERPOLICY_RULESENTRY.fields_by_name['value'].message_type = _INTEGERRULE
_INTEGERPOLICY_RULESENTRY.containing_type = _INTEGERPOLICY
_INTEGERPOLICY.fields_by_name['rules'].message_type = _INTEGERPOLICY_RULESENTRY
_STRINGPOLICY_RULESENTRY.fields_by_name['value'].message_type = _STRINGRULE
_STRINGPOLICY_RULESENTRY.containing_type = _STRINGPOLICY
_STRINGPOLICY.fields_by_name['rules'].message_type = _STRINGPOLICY_RULESENTRY
_METRICSARG.fields_by_name['metrics'].message_type = _METRIC
_METRICSREPLY.fields_by_name['metrics'].message_type = _METRIC
_GETMETRICTYPESARG.fields_by_name['config'].message_type = _CONFIGMAP
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['ErrReply'] = _ERRREPLY
DESCRIPTOR.message_types_by_name['Time'] = _TIME
DESCRIPTOR.message_types_by_name['NamespaceElement'] = _NAMESPACEELEMENT
DESCRIPTOR.message_types_by_name['PubProcArg'] = _PUBPROCARG
DESCRIPTOR.message_types_by_name['Metric'] = _METRIC
DESCRIPTOR.message_types_by_name['ConfigMap'] = _CONFIGMAP
DESCRIPTOR.message_types_by_name['KillArg'] = _KILLARG
DESCRIPTOR.message_types_by_name['GetConfigPolicyReply'] = _GETCONFIGPOLICYREPLY
DESCRIPTOR.message_types_by_name['BoolRule'] = _BOOLRULE
DESCRIPTOR.message_types_by_name['BoolPolicy'] = _BOOLPOLICY
DESCRIPTOR.message_types_by_name['FloatRule'] = _FLOATRULE
DESCRIPTOR.message_types_by_name['FloatPolicy'] = _FLOATPOLICY
DESCRIPTOR.message_types_by_name['IntegerRule'] = _INTEGERRULE
DESCRIPTOR.message_types_by_name['IntegerPolicy'] = _INTEGERPOLICY
DESCRIPTOR.message_types_by_name['StringRule'] = _STRINGRULE
DESCRIPTOR.message_types_by_name['StringPolicy'] = _STRINGPOLICY
DESCRIPTOR.message_types_by_name['MetricsArg'] = _METRICSARG
DESCRIPTOR.message_types_by_name['MetricsReply'] = _METRICSREPLY
DESCRIPTOR.message_types_by_name['GetMetricTypesArg'] = _GETMETRICTYPESARG

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.Empty)
  ))
_sym_db.RegisterMessage(Empty)

ErrReply = _reflection.GeneratedProtocolMessageType('ErrReply', (_message.Message,), dict(
  DESCRIPTOR = _ERRREPLY,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.ErrReply)
  ))
_sym_db.RegisterMessage(ErrReply)

Time = _reflection.GeneratedProtocolMessageType('Time', (_message.Message,), dict(
  DESCRIPTOR = _TIME,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.Time)
  ))
_sym_db.RegisterMessage(Time)

NamespaceElement = _reflection.GeneratedProtocolMessageType('NamespaceElement', (_message.Message,), dict(
  DESCRIPTOR = _NAMESPACEELEMENT,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.NamespaceElement)
  ))
_sym_db.RegisterMessage(NamespaceElement)

PubProcArg = _reflection.GeneratedProtocolMessageType('PubProcArg', (_message.Message,), dict(
  DESCRIPTOR = _PUBPROCARG,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.PubProcArg)
  ))
_sym_db.RegisterMessage(PubProcArg)

Metric = _reflection.GeneratedProtocolMessageType('Metric', (_message.Message,), dict(

  TagsEntry = _reflection.GeneratedProtocolMessageType('TagsEntry', (_message.Message,), dict(
    DESCRIPTOR = _METRIC_TAGSENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.Metric.TagsEntry)
    ))
  ,
  DESCRIPTOR = _METRIC,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.Metric)
  ))
_sym_db.RegisterMessage(Metric)
_sym_db.RegisterMessage(Metric.TagsEntry)

ConfigMap = _reflection.GeneratedProtocolMessageType('ConfigMap', (_message.Message,), dict(

  IntMapEntry = _reflection.GeneratedProtocolMessageType('IntMapEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONFIGMAP_INTMAPENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.ConfigMap.IntMapEntry)
    ))
  ,

  StringMapEntry = _reflection.GeneratedProtocolMessageType('StringMapEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONFIGMAP_STRINGMAPENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.ConfigMap.StringMapEntry)
    ))
  ,

  FloatMapEntry = _reflection.GeneratedProtocolMessageType('FloatMapEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONFIGMAP_FLOATMAPENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.ConfigMap.FloatMapEntry)
    ))
  ,

  BoolMapEntry = _reflection.GeneratedProtocolMessageType('BoolMapEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONFIGMAP_BOOLMAPENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.ConfigMap.BoolMapEntry)
    ))
  ,
  DESCRIPTOR = _CONFIGMAP,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.ConfigMap)
  ))
_sym_db.RegisterMessage(ConfigMap)
_sym_db.RegisterMessage(ConfigMap.IntMapEntry)
_sym_db.RegisterMessage(ConfigMap.StringMapEntry)
_sym_db.RegisterMessage(ConfigMap.FloatMapEntry)
_sym_db.RegisterMessage(ConfigMap.BoolMapEntry)

KillArg = _reflection.GeneratedProtocolMessageType('KillArg', (_message.Message,), dict(
  DESCRIPTOR = _KILLARG,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.KillArg)
  ))
_sym_db.RegisterMessage(KillArg)

GetConfigPolicyReply = _reflection.GeneratedProtocolMessageType('GetConfigPolicyReply', (_message.Message,), dict(

  BoolPolicyEntry = _reflection.GeneratedProtocolMessageType('BoolPolicyEntry', (_message.Message,), dict(
    DESCRIPTOR = _GETCONFIGPOLICYREPLY_BOOLPOLICYENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.GetConfigPolicyReply.BoolPolicyEntry)
    ))
  ,

  FloatPolicyEntry = _reflection.GeneratedProtocolMessageType('FloatPolicyEntry', (_message.Message,), dict(
    DESCRIPTOR = _GETCONFIGPOLICYREPLY_FLOATPOLICYENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.GetConfigPolicyReply.FloatPolicyEntry)
    ))
  ,

  IntegerPolicyEntry = _reflection.GeneratedProtocolMessageType('IntegerPolicyEntry', (_message.Message,), dict(
    DESCRIPTOR = _GETCONFIGPOLICYREPLY_INTEGERPOLICYENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.GetConfigPolicyReply.IntegerPolicyEntry)
    ))
  ,

  StringPolicyEntry = _reflection.GeneratedProtocolMessageType('StringPolicyEntry', (_message.Message,), dict(
    DESCRIPTOR = _GETCONFIGPOLICYREPLY_STRINGPOLICYENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.GetConfigPolicyReply.StringPolicyEntry)
    ))
  ,
  DESCRIPTOR = _GETCONFIGPOLICYREPLY,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.GetConfigPolicyReply)
  ))
_sym_db.RegisterMessage(GetConfigPolicyReply)
_sym_db.RegisterMessage(GetConfigPolicyReply.BoolPolicyEntry)
_sym_db.RegisterMessage(GetConfigPolicyReply.FloatPolicyEntry)
_sym_db.RegisterMessage(GetConfigPolicyReply.IntegerPolicyEntry)
_sym_db.RegisterMessage(GetConfigPolicyReply.StringPolicyEntry)

BoolRule = _reflection.GeneratedProtocolMessageType('BoolRule', (_message.Message,), dict(
  DESCRIPTOR = _BOOLRULE,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.BoolRule)
  ))
_sym_db.RegisterMessage(BoolRule)

BoolPolicy = _reflection.GeneratedProtocolMessageType('BoolPolicy', (_message.Message,), dict(

  RulesEntry = _reflection.GeneratedProtocolMessageType('RulesEntry', (_message.Message,), dict(
    DESCRIPTOR = _BOOLPOLICY_RULESENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.BoolPolicy.RulesEntry)
    ))
  ,
  DESCRIPTOR = _BOOLPOLICY,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.BoolPolicy)
  ))
_sym_db.RegisterMessage(BoolPolicy)
_sym_db.RegisterMessage(BoolPolicy.RulesEntry)

FloatRule = _reflection.GeneratedProtocolMessageType('FloatRule', (_message.Message,), dict(
  DESCRIPTOR = _FLOATRULE,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.FloatRule)
  ))
_sym_db.RegisterMessage(FloatRule)

FloatPolicy = _reflection.GeneratedProtocolMessageType('FloatPolicy', (_message.Message,), dict(

  RulesEntry = _reflection.GeneratedProtocolMessageType('RulesEntry', (_message.Message,), dict(
    DESCRIPTOR = _FLOATPOLICY_RULESENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.FloatPolicy.RulesEntry)
    ))
  ,
  DESCRIPTOR = _FLOATPOLICY,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.FloatPolicy)
  ))
_sym_db.RegisterMessage(FloatPolicy)
_sym_db.RegisterMessage(FloatPolicy.RulesEntry)

IntegerRule = _reflection.GeneratedProtocolMessageType('IntegerRule', (_message.Message,), dict(
  DESCRIPTOR = _INTEGERRULE,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.IntegerRule)
  ))
_sym_db.RegisterMessage(IntegerRule)

IntegerPolicy = _reflection.GeneratedProtocolMessageType('IntegerPolicy', (_message.Message,), dict(

  RulesEntry = _reflection.GeneratedProtocolMessageType('RulesEntry', (_message.Message,), dict(
    DESCRIPTOR = _INTEGERPOLICY_RULESENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.IntegerPolicy.RulesEntry)
    ))
  ,
  DESCRIPTOR = _INTEGERPOLICY,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.IntegerPolicy)
  ))
_sym_db.RegisterMessage(IntegerPolicy)
_sym_db.RegisterMessage(IntegerPolicy.RulesEntry)

StringRule = _reflection.GeneratedProtocolMessageType('StringRule', (_message.Message,), dict(
  DESCRIPTOR = _STRINGRULE,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.StringRule)
  ))
_sym_db.RegisterMessage(StringRule)

StringPolicy = _reflection.GeneratedProtocolMessageType('StringPolicy', (_message.Message,), dict(

  RulesEntry = _reflection.GeneratedProtocolMessageType('RulesEntry', (_message.Message,), dict(
    DESCRIPTOR = _STRINGPOLICY_RULESENTRY,
    __module__ = 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:rpc.StringPolicy.RulesEntry)
    ))
  ,
  DESCRIPTOR = _STRINGPOLICY,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.StringPolicy)
  ))
_sym_db.RegisterMessage(StringPolicy)
_sym_db.RegisterMessage(StringPolicy.RulesEntry)

MetricsArg = _reflection.GeneratedProtocolMessageType('MetricsArg', (_message.Message,), dict(
  DESCRIPTOR = _METRICSARG,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.MetricsArg)
  ))
_sym_db.RegisterMessage(MetricsArg)

MetricsReply = _reflection.GeneratedProtocolMessageType('MetricsReply', (_message.Message,), dict(
  DESCRIPTOR = _METRICSREPLY,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.MetricsReply)
  ))
_sym_db.RegisterMessage(MetricsReply)

GetMetricTypesArg = _reflection.GeneratedProtocolMessageType('GetMetricTypesArg', (_message.Message,), dict(
  DESCRIPTOR = _GETMETRICTYPESARG,
  __module__ = 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:rpc.GetMetricTypesArg)
  ))
_sym_db.RegisterMessage(GetMetricTypesArg)


_METRIC_TAGSENTRY.has_options = True
_METRIC_TAGSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CONFIGMAP_INTMAPENTRY.has_options = True
_CONFIGMAP_INTMAPENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CONFIGMAP_STRINGMAPENTRY.has_options = True
_CONFIGMAP_STRINGMAPENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CONFIGMAP_FLOATMAPENTRY.has_options = True
_CONFIGMAP_FLOATMAPENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CONFIGMAP_BOOLMAPENTRY.has_options = True
_CONFIGMAP_BOOLMAPENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_GETCONFIGPOLICYREPLY_BOOLPOLICYENTRY.has_options = True
_GETCONFIGPOLICYREPLY_BOOLPOLICYENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_GETCONFIGPOLICYREPLY_FLOATPOLICYENTRY.has_options = True
_GETCONFIGPOLICYREPLY_FLOATPOLICYENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_GETCONFIGPOLICYREPLY_INTEGERPOLICYENTRY.has_options = True
_GETCONFIGPOLICYREPLY_INTEGERPOLICYENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_GETCONFIGPOLICYREPLY_STRINGPOLICYENTRY.has_options = True
_GETCONFIGPOLICYREPLY_STRINGPOLICYENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_BOOLPOLICY_RULESENTRY.has_options = True
_BOOLPOLICY_RULESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_FLOATPOLICY_RULESENTRY.has_options = True
_FLOATPOLICY_RULESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_INTEGERPOLICY_RULESENTRY.has_options = True
_INTEGERPOLICY_RULESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_STRINGPOLICY_RULESENTRY.has_options = True
_STRINGPOLICY_RULESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class CollectorStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CollectMetrics = channel.unary_unary(
        '/rpc.Collector/CollectMetrics',
        request_serializer=MetricsArg.SerializeToString,
        response_deserializer=MetricsReply.FromString,
        )
    self.GetMetricTypes = channel.unary_unary(
        '/rpc.Collector/GetMetricTypes',
        request_serializer=GetMetricTypesArg.SerializeToString,
        response_deserializer=MetricsReply.FromString,
        )
    self.Ping = channel.unary_unary(
        '/rpc.Collector/Ping',
        request_serializer=Empty.SerializeToString,
        response_deserializer=ErrReply.FromString,
        )
    self.Kill = channel.unary_unary(
        '/rpc.Collector/Kill',
        request_serializer=KillArg.SerializeToString,
        response_deserializer=ErrReply.FromString,
        )
    self.GetConfigPolicy = channel.unary_unary(
        '/rpc.Collector/GetConfigPolicy',
        request_serializer=Empty.SerializeToString,
        response_deserializer=GetConfigPolicyReply.FromString,
        )


class CollectorServicer(object):

  def CollectMetrics(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetMetricTypes(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Ping(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Kill(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetConfigPolicy(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CollectorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CollectMetrics': grpc.unary_unary_rpc_method_handler(
          servicer.CollectMetrics,
          request_deserializer=MetricsArg.FromString,
          response_serializer=MetricsReply.SerializeToString,
      ),
      'GetMetricTypes': grpc.unary_unary_rpc_method_handler(
          servicer.GetMetricTypes,
          request_deserializer=GetMetricTypesArg.FromString,
          response_serializer=MetricsReply.SerializeToString,
      ),
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=Empty.FromString,
          response_serializer=ErrReply.SerializeToString,
      ),
      'Kill': grpc.unary_unary_rpc_method_handler(
          servicer.Kill,
          request_deserializer=KillArg.FromString,
          response_serializer=ErrReply.SerializeToString,
      ),
      'GetConfigPolicy': grpc.unary_unary_rpc_method_handler(
          servicer.GetConfigPolicy,
          request_deserializer=Empty.FromString,
          response_serializer=GetConfigPolicyReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rpc.Collector', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaCollectorServicer(object):
  def CollectMetrics(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetMetricTypes(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Ping(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Kill(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetConfigPolicy(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaCollectorStub(object):
  def CollectMetrics(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  CollectMetrics.future = None
  def GetMetricTypes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetMetricTypes.future = None
  def Ping(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Ping.future = None
  def Kill(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Kill.future = None
  def GetConfigPolicy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetConfigPolicy.future = None


def beta_create_Collector_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('rpc.Collector', 'CollectMetrics'): MetricsArg.FromString,
    ('rpc.Collector', 'GetConfigPolicy'): Empty.FromString,
    ('rpc.Collector', 'GetMetricTypes'): GetMetricTypesArg.FromString,
    ('rpc.Collector', 'Kill'): KillArg.FromString,
    ('rpc.Collector', 'Ping'): Empty.FromString,
  }
  response_serializers = {
    ('rpc.Collector', 'CollectMetrics'): MetricsReply.SerializeToString,
    ('rpc.Collector', 'GetConfigPolicy'): GetConfigPolicyReply.SerializeToString,
    ('rpc.Collector', 'GetMetricTypes'): MetricsReply.SerializeToString,
    ('rpc.Collector', 'Kill'): ErrReply.SerializeToString,
    ('rpc.Collector', 'Ping'): ErrReply.SerializeToString,
  }
  method_implementations = {
    ('rpc.Collector', 'CollectMetrics'): face_utilities.unary_unary_inline(servicer.CollectMetrics),
    ('rpc.Collector', 'GetConfigPolicy'): face_utilities.unary_unary_inline(servicer.GetConfigPolicy),
    ('rpc.Collector', 'GetMetricTypes'): face_utilities.unary_unary_inline(servicer.GetMetricTypes),
    ('rpc.Collector', 'Kill'): face_utilities.unary_unary_inline(servicer.Kill),
    ('rpc.Collector', 'Ping'): face_utilities.unary_unary_inline(servicer.Ping),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Collector_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('rpc.Collector', 'CollectMetrics'): MetricsArg.SerializeToString,
    ('rpc.Collector', 'GetConfigPolicy'): Empty.SerializeToString,
    ('rpc.Collector', 'GetMetricTypes'): GetMetricTypesArg.SerializeToString,
    ('rpc.Collector', 'Kill'): KillArg.SerializeToString,
    ('rpc.Collector', 'Ping'): Empty.SerializeToString,
  }
  response_deserializers = {
    ('rpc.Collector', 'CollectMetrics'): MetricsReply.FromString,
    ('rpc.Collector', 'GetConfigPolicy'): GetConfigPolicyReply.FromString,
    ('rpc.Collector', 'GetMetricTypes'): MetricsReply.FromString,
    ('rpc.Collector', 'Kill'): ErrReply.FromString,
    ('rpc.Collector', 'Ping'): ErrReply.FromString,
  }
  cardinalities = {
    'CollectMetrics': cardinality.Cardinality.UNARY_UNARY,
    'GetConfigPolicy': cardinality.Cardinality.UNARY_UNARY,
    'GetMetricTypes': cardinality.Cardinality.UNARY_UNARY,
    'Kill': cardinality.Cardinality.UNARY_UNARY,
    'Ping': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'rpc.Collector', cardinalities, options=stub_options)


class ProcessorStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Process = channel.unary_unary(
        '/rpc.Processor/Process',
        request_serializer=PubProcArg.SerializeToString,
        response_deserializer=MetricsReply.FromString,
        )
    self.Ping = channel.unary_unary(
        '/rpc.Processor/Ping',
        request_serializer=Empty.SerializeToString,
        response_deserializer=ErrReply.FromString,
        )
    self.Kill = channel.unary_unary(
        '/rpc.Processor/Kill',
        request_serializer=KillArg.SerializeToString,
        response_deserializer=ErrReply.FromString,
        )
    self.GetConfigPolicy = channel.unary_unary(
        '/rpc.Processor/GetConfigPolicy',
        request_serializer=Empty.SerializeToString,
        response_deserializer=GetConfigPolicyReply.FromString,
        )


class ProcessorServicer(object):

  def Process(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Ping(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Kill(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetConfigPolicy(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProcessorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Process': grpc.unary_unary_rpc_method_handler(
          servicer.Process,
          request_deserializer=PubProcArg.FromString,
          response_serializer=MetricsReply.SerializeToString,
      ),
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=Empty.FromString,
          response_serializer=ErrReply.SerializeToString,
      ),
      'Kill': grpc.unary_unary_rpc_method_handler(
          servicer.Kill,
          request_deserializer=KillArg.FromString,
          response_serializer=ErrReply.SerializeToString,
      ),
      'GetConfigPolicy': grpc.unary_unary_rpc_method_handler(
          servicer.GetConfigPolicy,
          request_deserializer=Empty.FromString,
          response_serializer=GetConfigPolicyReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rpc.Processor', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaProcessorServicer(object):
  def Process(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Ping(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Kill(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetConfigPolicy(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaProcessorStub(object):
  def Process(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Process.future = None
  def Ping(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Ping.future = None
  def Kill(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Kill.future = None
  def GetConfigPolicy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetConfigPolicy.future = None


def beta_create_Processor_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('rpc.Processor', 'GetConfigPolicy'): Empty.FromString,
    ('rpc.Processor', 'Kill'): KillArg.FromString,
    ('rpc.Processor', 'Ping'): Empty.FromString,
    ('rpc.Processor', 'Process'): PubProcArg.FromString,
  }
  response_serializers = {
    ('rpc.Processor', 'GetConfigPolicy'): GetConfigPolicyReply.SerializeToString,
    ('rpc.Processor', 'Kill'): ErrReply.SerializeToString,
    ('rpc.Processor', 'Ping'): ErrReply.SerializeToString,
    ('rpc.Processor', 'Process'): MetricsReply.SerializeToString,
  }
  method_implementations = {
    ('rpc.Processor', 'GetConfigPolicy'): face_utilities.unary_unary_inline(servicer.GetConfigPolicy),
    ('rpc.Processor', 'Kill'): face_utilities.unary_unary_inline(servicer.Kill),
    ('rpc.Processor', 'Ping'): face_utilities.unary_unary_inline(servicer.Ping),
    ('rpc.Processor', 'Process'): face_utilities.unary_unary_inline(servicer.Process),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Processor_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('rpc.Processor', 'GetConfigPolicy'): Empty.SerializeToString,
    ('rpc.Processor', 'Kill'): KillArg.SerializeToString,
    ('rpc.Processor', 'Ping'): Empty.SerializeToString,
    ('rpc.Processor', 'Process'): PubProcArg.SerializeToString,
  }
  response_deserializers = {
    ('rpc.Processor', 'GetConfigPolicy'): GetConfigPolicyReply.FromString,
    ('rpc.Processor', 'Kill'): ErrReply.FromString,
    ('rpc.Processor', 'Ping'): ErrReply.FromString,
    ('rpc.Processor', 'Process'): MetricsReply.FromString,
  }
  cardinalities = {
    'GetConfigPolicy': cardinality.Cardinality.UNARY_UNARY,
    'Kill': cardinality.Cardinality.UNARY_UNARY,
    'Ping': cardinality.Cardinality.UNARY_UNARY,
    'Process': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'rpc.Processor', cardinalities, options=stub_options)


class PublisherStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Publish = channel.unary_unary(
        '/rpc.Publisher/Publish',
        request_serializer=PubProcArg.SerializeToString,
        response_deserializer=ErrReply.FromString,
        )
    self.Ping = channel.unary_unary(
        '/rpc.Publisher/Ping',
        request_serializer=Empty.SerializeToString,
        response_deserializer=ErrReply.FromString,
        )
    self.Kill = channel.unary_unary(
        '/rpc.Publisher/Kill',
        request_serializer=KillArg.SerializeToString,
        response_deserializer=ErrReply.FromString,
        )
    self.GetConfigPolicy = channel.unary_unary(
        '/rpc.Publisher/GetConfigPolicy',
        request_serializer=Empty.SerializeToString,
        response_deserializer=GetConfigPolicyReply.FromString,
        )


class PublisherServicer(object):

  def Publish(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Ping(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Kill(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetConfigPolicy(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PublisherServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Publish': grpc.unary_unary_rpc_method_handler(
          servicer.Publish,
          request_deserializer=PubProcArg.FromString,
          response_serializer=ErrReply.SerializeToString,
      ),
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=Empty.FromString,
          response_serializer=ErrReply.SerializeToString,
      ),
      'Kill': grpc.unary_unary_rpc_method_handler(
          servicer.Kill,
          request_deserializer=KillArg.FromString,
          response_serializer=ErrReply.SerializeToString,
      ),
      'GetConfigPolicy': grpc.unary_unary_rpc_method_handler(
          servicer.GetConfigPolicy,
          request_deserializer=Empty.FromString,
          response_serializer=GetConfigPolicyReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rpc.Publisher', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaPublisherServicer(object):
  def Publish(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Ping(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Kill(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetConfigPolicy(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaPublisherStub(object):
  def Publish(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Publish.future = None
  def Ping(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Ping.future = None
  def Kill(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Kill.future = None
  def GetConfigPolicy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetConfigPolicy.future = None


def beta_create_Publisher_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('rpc.Publisher', 'GetConfigPolicy'): Empty.FromString,
    ('rpc.Publisher', 'Kill'): KillArg.FromString,
    ('rpc.Publisher', 'Ping'): Empty.FromString,
    ('rpc.Publisher', 'Publish'): PubProcArg.FromString,
  }
  response_serializers = {
    ('rpc.Publisher', 'GetConfigPolicy'): GetConfigPolicyReply.SerializeToString,
    ('rpc.Publisher', 'Kill'): ErrReply.SerializeToString,
    ('rpc.Publisher', 'Ping'): ErrReply.SerializeToString,
    ('rpc.Publisher', 'Publish'): ErrReply.SerializeToString,
  }
  method_implementations = {
    ('rpc.Publisher', 'GetConfigPolicy'): face_utilities.unary_unary_inline(servicer.GetConfigPolicy),
    ('rpc.Publisher', 'Kill'): face_utilities.unary_unary_inline(servicer.Kill),
    ('rpc.Publisher', 'Ping'): face_utilities.unary_unary_inline(servicer.Ping),
    ('rpc.Publisher', 'Publish'): face_utilities.unary_unary_inline(servicer.Publish),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Publisher_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('rpc.Publisher', 'GetConfigPolicy'): Empty.SerializeToString,
    ('rpc.Publisher', 'Kill'): KillArg.SerializeToString,
    ('rpc.Publisher', 'Ping'): Empty.SerializeToString,
    ('rpc.Publisher', 'Publish'): PubProcArg.SerializeToString,
  }
  response_deserializers = {
    ('rpc.Publisher', 'GetConfigPolicy'): GetConfigPolicyReply.FromString,
    ('rpc.Publisher', 'Kill'): ErrReply.FromString,
    ('rpc.Publisher', 'Ping'): ErrReply.FromString,
    ('rpc.Publisher', 'Publish'): ErrReply.FromString,
  }
  cardinalities = {
    'GetConfigPolicy': cardinality.Cardinality.UNARY_UNARY,
    'Kill': cardinality.Cardinality.UNARY_UNARY,
    'Ping': cardinality.Cardinality.UNARY_UNARY,
    'Publish': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'rpc.Publisher', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
